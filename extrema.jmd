``` {r echo=FALSE, results="asis"}
## process with knitr:::knit2html("filename.Rmd")
## Nothing to see here ... move along
require("questionr", quietly=TRUE)
page <- questionr:::Page$new()
nav <- questionr:::NavBar$new()
cat(page$write_header())
```
`r I(nav$write_header("Maximization and minimization", "with julia"))`

This project discusses a basic application of calculus to answer questions of the type: What is the largest value a function can take.

For example, a question like of all rectangles with perimeter 20, which has of the largest area?

There are a few basic theorems that will help us. First is our
"hunting license" which tells us there is actually something to find
if some assumptions are met:



#### Extreme value theorem (Bolzano)

A real-valued continuous function $f$ on a closed interval $[a,b]$
will obtain its maximum (minimum) value. That is there exists at least
one value $c$ in $[a,b]$ for which $f( c) \geq f(x)$ ($f( c) \leq
f(x)$) for any $x$ in $[a,b]$.



This complements a theorem of Fermat
(http://en.wikipedia.org/wiki/Fermat%27s_theorem_(stationary_points) )
which can be expressed as:

Further, the extrema (maxima or minima) can only occur at a _critical
point_ of $f$ or at the endpoints, $a$ and $b$.


Though not all of our problems lend themselves to a description of a continuous function on a closed interval, if they do we have an analytic prescription to  find the absolute extrema of a function 

* Find the critical points. For this we will use Newton's method to find $f'(x) = 0$, as appropriate.
* Evaluate the function values there and at the end points. 
* Identify the largest and smallest values.

With the computer we can take some shortcuts, as we will be able to
graph our function to see where the extreme values will be.


Before beginning we pull in our packages for plotting and our useful functions:

```j
using TeachersHelpers, Gadfly, Compose; require_gist("4530920")
```


`r I(nav$add("Perimeter and area"))`

The simplest way to investigate the maximum or minimum value of a function over a closed interval is to just graph it and look. 

We begin with the question of which rectangles of perimeter 20 have the largest area? The figure shows a few different rectangles with this perimeter and their respective areas.

```{r echo=FALSE}
plot.new()
plot.window(xlim=c(0,8), ylim=c(0,8))
draw_box = function(x, lty=x) {
  y = 10 - x
  col = topo.colors(10)[x]
  points(x,y, cex=2, pch=16, col=col)
  text(x,y, sprintf("A=%s", x*y), pos=4)
  polygon(c(0, x, x, 0), c(0,0,y,y), border=col, lwd=lty/4)
}
invisible(sapply(c(2,3,5,7), draw_box))
```

The basic mathematical approach is to find a function of a single variable to maximize or minimize. In this case we have two variables describing a rectangle a base, $b$ and height $h$. Our formulas are:

$$
P = 20 = 2b + 2h, \quad A = bh.
$$


We see that $b$ can be no bigger than 10 and no smaller than 0 from
the restriction put in place through the perimeter. Solving for $h$ in
terms of $b$ then yields this restatement of the problem:

Maximize $A(b) = b \cdot (10 - b)$ over the interval $[0,10]$.

This is exactly the form needed to apply our theorem about the
existence of extrema. Rather than solve analytically by taking a
derivative, we simply graph to find the value:

```j
A(b) = b * (10 - b)
plot(A, 0, 10)
```

You should see the maximum occurs at $b=5$ by symmetry, so $h=5$ as well, and the maximum
area is then 25. This gives the satisfying answer that among all
rectangles of fixed perimeter, that with the largest area is a square.



#### Norman Windows

Here is a similar, though more complicated, example where the analytic
approach can be a bit more tedious, but the graphical one mostly
satisfying, though we do use Newton's method to find the final answer.

Let a "Norman" window consist of a rectangular window of top length
$x$ and side length $y$ and a half circle on top. The goal is to
maximize the area for a fixed value of the perimeter. Let this be 20
units.

```{r echo=FALSE}
plot.new()
plot.window(xlim=c(-3, 3), ylim=c(-4, 2))
lines(c(-2, -2, 2, 2), c(0, -4, -4, 0))
theta = seq(0, pi, length=100)
lines(2*cos(theta), 2*sin(theta))

lines(c(-2, 2), c(0,0), lty=2, col="gray")
lines(c(0,sqrt(2)), c(0,sqrt(2)), lwd=2, col="black")
text(sqrt(2)/2, sqrt(2)/2, "x/2", pos=4)

text(2, -2, "y", pos=4)
text(0, -4, "x", pos=1)
```



Then we have two equations. First the perimeter consists of 3 sides of
the rectangle and the perimeter of half a circle ($\pi r$):

$$
P = 2y + x + \pi(x/2) = 20
$$

And the Area is the area of the rectangle plus the area of the half circle ($\pi r^2/2$).

$$
A = xy + \pi(x/2)^2/2
$$

We solve for $y$ in the first with $y = (20 - x - \pi(x/2))/2$ and
substitute into $A$ without taking time to simplify, as your high
school teacher isn't here anymore.

```j
A(x) = x * (20 - x - pi*(x/2))/2 + pi*(x/2)^2/2
```

The limits are found from the perimeter equation when either $x=0$ or
when $y=0$ (which is at $x=20/(1+\pi/2)$). This leaves to find an
absolute maximum of a continuous function over the closed interval
$[0, 20/(1+\pi/2)]$. Again, our theorem tells us this maximum must occur.

We begin by simply graphing and estimating the values of the maximum and
where it occurs.

```j
plot(A, 0, 20/(1+pi/2))
```

The naked eye sees that maximum value is somewhere around 27 and
occurs at $x\approx 5.8$. Clearly from the graph, we know the maximum
value happens at the critical point and there is only one such
critical point.

As reading the maximum from the graph is more difficult than reading a
0 of a function, we plot the derivative using our approximate
derivative.

```j
plot(D(A), 5.5, 5.7) 
```

We see that the critical point is around 5.6.

#### Using Newton's method to locate critical points.

Rather than zoom in graphically, we now use Newton's method to find a
more precise value. We know that the maximum will occur at a critical
point, a zero of the derivative. Newton's method can locate the
precise values of these zeros. The only thing to keep track of is to
solve $f'(x) = 0$ requires us to use both $f'(x)$ and _its_ derivative
$f''(x)$ -- and not $f(x)$ and $f'(x)$.

Our initial guess will be taken from the graph we made, or
$x=5.6$. Here is how we call Newton's method.

```j
x, ctr = nm(D(A), D2(A), 5.6)
```

The value `x = ` `j x` is the critical point, and in this case gives
the position of the value that will maximize the function. This value is
sometimes referred to as the _argmax_, or argument which maximizes the
function. The maximum area is just:

```j
A(x)
```

`r I(nav$add("Trigonometry"))`

Many maximization and minimization problems involve triangles, which
in turn use trigonometry in their description. Here is an example, the
"ladder corner problem." (See
http://www.mathematische-basteleien.de/ladder.htm for other ladder
problems.)


A ladder is to be moved through a two-dimensional hallway which has a bend and gets narrower after the bend. The hallway is 8 feet wide then 5 feet wide. What is the longest such ladder that can be navigated around the corner? The figure shows a ladder of length $l_1 + l_2$ that got stuck -- it was too long.

```{r echo=FALSE}
plot.new()
plot.window(xlim=c(0, 17), ylim=c(0, 15))
lines(c(0,0,17), c(15, 0, 0), lwd=1, col="gray")
lines(c(5,5,17), c(15, 8, 8), lwd=1, col="gray")
lines(c(0, 15), c(12, 0), lwd=2, col="black")

lines(c(0,5), c(8,8), lty=2, col="gray")
text(2.5, 8, "5", pos=1)

lines(c(5,5), c(0,8), lty=2, col="gray")
text(5, 4, "8", pos=2)

text(13, .8, expression(theta))
x1 = 10
text(x1, 12 - .5 - 4/5*x1, expression(l[1]))
x1 = 2.5
text(x1, 12 - .5 - 4/5*x1, expression(l[2]))
```

We approach this problem in reverse. It is easy to see when a ladder
is too long. It gets stuck at some angle $\theta$. So for each
$\theta$ we find that ladder length that is just too long. Then we
find the minimum length of all these ladders that are too long. If a
ladder is this length or more it will get stuck for some
angle. However, if it is less than this length it will not get stuck.
So to maximize a ladder length, we minimize a different function. Neat.

Now, to find the length $l = l_1 + l_2$ as a function of $\theta$.

We need to brush off our trigonometry, in particular right triangle
trigonometry. We see from the figure that $l_1$ is the hypotenuse of a
right triangle with opposite side $8$ and $l_2$ is the hypotenuse of a
right triangle with adjacent side $5$. So, $8/l_1 = \sin\theta$ and
$5/l_2 = \cos\theta$.


That is, we have

$$
l(\theta) = \frac{8}{\sin\theta} + \frac{5}{\cos\theta}.
$$

Our goal is to minimize this function for all angles between $0$ and $\pi/2$.

This not a continuous function on a closed interval -- it is undefined
at the endpoints. That being said, a quick plot will convince us that
the minimum occurs at a critical point and there is only one critical point in $(0, \pi/2)$.

```j
l(t) = 8/sin(t) + 5/cos(t)
delta = 0.1
plot(l, 0 + delta, pi/2 - delta)
```

The minimum occurs near $0.8$. We use Newton's method to refine this guess:

```j
x, ctr = nm(D(l), D2(l), 0.8)
```

So the minimum of the function $l$ is `l(x)` = `j l(x)`. That is, any
ladder less than this length can get around the hallway.


`r I(nav$add("Minimize surface area of a can", ""))`

A 12oz can of some soft drink is 355ml which is 355 cubic centimeters. A can to hold this amount is produced in the shape of cylinder with radios $r$ and height $h$. The materials involved give the surface area, which would be:

$$
SA = h \cdot 2\pi r + 2 \cdot \pi r^2
$$

The volume satisfies:

$$
V = 355 = h \cdot \pi r^2
$$

Find the values of $r$ and $h$ which minimize the surface area.


Okay, we start like (like most all of these problems) expressing the function to minimize in terms of one variable. In this case, we easily solve for $h$ from the equation for the volume to get:

$$
SA = \frac{355}{\pi r^2} \cdot 2\pi r + 2 \cdot \pi r^2
$$

Which we minimize subject to the constraint that $r \geq 0$. 

We start by making a graph, making an educated guess that the answer is somewhere near a real life answer, or around 3-5 cms in radius:

```j
SA(r) = 355/(pi*r^2)*2*pi*r + 2 * pi * r^2
plot(SA, 2, 10)
```

The minimum looks to be around 4cm. We can use Newton's method to zero in on the answer:

```j
(r0, ctr) = nm(SA', SA'', 4)
```

Okay, 4.16 is our computation for $r$. To get $h$, we use:

```j
355/(pi*r0^2) ## h
```




`r I(nav$add("Rate times time", "checking assumptions"))`

Ethan Hunt, a top secret spy, has a mission to chase a bad guy. Here is what we know:

* Ethan likes to run. He can run at 10 miles per hour.
* He can drive a car -- usually some concept car by BMW -- at 30 miles per hour, but only on the road.
  
For his mission, he needs to go 10 miles west and 5 miles north. He can do this by:

* just driving 10 miles west then 5 miles north, or
* just running the diagonal distance, or
* driving $0 < x < 10$ miles west, then running on the diagonal


A quick analysis says:

* It would take $(10+5)/30$ hours to just drive
* It would take $\sqrt{10^2 + 5^2}/10$ hours to just run
  
Now, if he drives $x$ miles west ($0 < x < 10$) he would run an amount given by the hypotenuse of a triangle with lengths $5$ and $10-x$. His time driving would be $x/30$ and his time running would be $\sqrt{5^2 + (10-x)^2}/10$ for a total of:

$$
T(x) = x/30 + \sqrt{5^2 + (10-x)^2}/10, \quad 0 < x < 10
$$

With the endpoints given by
$T(0) = \sqrt{10^2 + 5^2}/10$ and $T(10) = (10 + 5)/30$.


Let's plot $T(x)$ over the interval $(0,10)$ and look:

```j
T(x) = x/30 + sqrt(5^2 + (10-x)^2)/10
plot(T, 0, 10) 
```

The minimum happens way out near 8. We zoom in a bit:

```j
plot(T, 7, 9) 
```

It appears to be around 8.3. We now use Newton's method to refine our
guess at the critical point:

```j
x, ctr = nm(D(T), D2(T), 8.3)
```

Okay, got it. Around 8.23. So is `T(x)` = `j T(x)` our minimum time?


`r I(nav$add("Infinite domains", ""))`
Maximize the function $xe^{-(1/2) x^2}$ over the interval $[0, \infty)$.

Here the extreme value theorem doesn't technically apply, as we don't
have a closed interval. However, if we can eliminate the endpoints as
candidates, then we should be able to convince ourselves the maximum
must occur at a critical point of $f(x)$. (If not, then convince your
self for all sufficiently large $M$ the maximum over $[0,M]$ occurs at
a critical point, not an endpoint. Then let $M$ go to infinity.)

So to approach this problem we first graph it over a wide interval.

```j
f(x) = x * exp(-x^2)
plot(f, 0, 100) 
```

Clearly the action is nearer to 1 than 100. We try graphing the derivative near that area:

```j
plot(D(f), 0, 5) 
```

This shows the value near $0.7$. We use Newton's method starting there:

```j
x, ctr = nm(D(f), D2(f), 0.7)
```

The convergence is quick. The maximum is at `f(x) =` `j f(x)`.


`r I(nav$add("Implicit derivates"))`

Many problems are best done with implicit derivatives. A video showing
such a problem along with how to do it analytically is here.
http://ocw.mit.edu/courses/mathematics/18-01sc-single-variable-calculus-fall-2010/unit-2-applications-of-differentiation/part-b-optimization-related-rates-and-newtons-method/session-32-ring-on-a-string/

This video starts with a simple question:

If you have a rope and heavy ring, where will the ring position itself due to gravity?

Well, suppose you hold the rope in two places, which we can take to be
$(0,0)$ and $(a,b)$. Then let $(x,y)$ be all the possible positions of
the ring that hold the rope taught. Then we have this picture:

```{r echo=FALSE}
plot.new()
plot.window(xlim=c(0,1), ylim=c(-5, 1.1))
x <- seq(.1, .9, length=9)
y <- c(-4.46262,-4.46866, -4.47268, -4.47469, -4.47468, -4.47267, -4.46864, -4.4626 , -4.45454)
lines(c(0, x[3], 1), c(0, y[3], 1))
points(c(0,1), c(0,1), pch=16, cex=2)
text(c(0,1), c(0,1), c("(0,0)", c("(a,b)")), pos=3)

lines(c(0, x[3], x[3]), c(0, 0, y[3]), cex=2, col="gray")
lines(c(1, x[3], x[3]), c(1, 1, y[3]), cex=2, col="gray")
text(x[3]/2, 0, "x", pos=1)
text(x[3], y[3]/2, "|y|", pos=2)
text(x[3], (1 + y[3])/2, "b-y", pos=4)
text((x[3] + 1)/2, 1, "a-x", pos=1)

text(x[3], y[3], "0", cex=4, col="gold")

```

Since the length of the rope does not change, we must have for any admissible $(x,y)$ that:

$$
L = \sqrt{x^2 + y^2} + \sqrt{(a-x)^2 + (b-y)^2},
$$

where these are the two hypotenuses in the figure computed with
Pythagorean's theorem.

If we assume that the ring will minimize the value of $y$ subject to this constraint, can we solve for $y$?

Well, with implicit differentiation you would regard $y=y(x)$,
implicitly differentiate and find the critical point of $y$. Though
messy to solve, the video shows a fundamental relationship which is a
restatement of the reflection properties of ellipses.

Here we show how we can do this numerically with `julia`.  We don't
really have an easy way to work with implicit functions in `julia`, so
we have some work to do to find an explicit function.

First, lets assume $a=1$ and $L=10$ ($L$ must be at least $\sqrt{1 + b^2}$) , then we have:

```j
a = 1; L = 10 
f(x, y, a, b) = sqrt(x^2 + y^2) + sqrt((a-x)^2 + (b-y)^2)
```

Now we solve for a value of $b$, say $b=1$. You could choose other
values for $b$, as long as $L$ is long enough.

```j
b = 1  ## some arbitrary choice
f(x, y) = f(x, y, a, b)
```

Our values $(x,y)$ must satisfy $f(x,y) = L$ so for a fixed $x$, $y$ must be a zero of the function:

$$
h(y) = f(x, y) - L = 0
$$

That is, if we start with $x$ and solve this equation for $y$ the
resulting value $(x,y)$ will be on the curve. Call this function $g$.
We can define it with:

```j
function g(x)
   local a, h ## don't clobber other definitions
   h(y) = f(x, y) - L
   (a, ctr) = nm(h, h', 0) ## using finite difference for h'
   a
end
```

Let's see if it worked. For $x=0.4$ we get that $y$ is

```j
g(.4)
```

And furthermore, we have 

```j
f(.4, g(.4))
```

This is essentially `L=` `j L`, which should be the case for any
choice of $x$ when we have convergence for $g$. Try it yourself.

Now we have a function $y=g(x)$. We graph to see that indeed we have a minimum value:

```j
plot(g, 0, 1)
```



Okay, now to find it. This is what we minimize to find the
resting position of the ring. Again, we turn to Newton's method, but
for minimization we use $g'$ and $g''$:

```j
(x, ctr) = nm(g', g'', .5) ## .5 from the graph
```

The point where the ring rests is:

```j
(x, g(x)) 
```

If you watch the video linked to above, you will see that the surprising fact here is
the resting point is such that the angles formed by the rope are the
same. Basically this makes the tension in both parts of the rope
equal, so there is a static position (if not static, the ring would
move and not end in the final position). We can verify this fact
numerically by showing the arctangents of the two triangles are the same:

```j
y = g(x); atan(abs(y)/x) - atan((b-y)/(a-x))
```

A value close enough to zero to make this all seem right.

Now, were we lucky and just happened to take $b$ in such a way to make this
work? Well, no. But convince yourself by doing the above for
different values of $b$.

`r I(nav$add("Alternatives to the derivative"))`

We close with an alternative to finding a maximum through Newton's
method that works for functions which are unimodal in an interval
(only one critical point). They do not need to be continuous.

The idea is due to Kiefer (Kiefer, J. (1953), "Sequential minimax
search for a maximum," Proceedings of the American Mathematical
Society 4 (3): 502-506.) and the algorithm is known as the golden
section search, as it employs the golden ratio $(1+\sqrt{5})/2$.

The basic idea is you start with a triple of points $x_1 < x_2 < x_3$
with $f(x_2)$ larger than either $f(x_1)$ or $f(x_3)$. We refine this
triple by choosing a value, $x_4$, within the larger of the two
sub-intervals, say this is $(x_1, x_2)$. If we have $f(x_4)$ bigger
than our previous best $f(x_2)$ then we get a new, shorter, triple
$x_1 < x_4 < x_2$. If not, then we get a different shorter triple $x_4
< x_2 < x_3$. Either way, we have reduced the domain to search for. We
stop when the domain we are looking over is small.

So to implement this we need three things:

* a means to pick the candidate point (`pick_point`)
* a function to give us the new triple (`update_triple`)
* a loop to repeat until we are within tolerance. (`while x3 - x1 > tol`)

With this, here we go:

```j
function golden_section(f::Function, x1, x2, x3)
    ## we must have f(x2) >= max(f(x1), f(x3)) *and* f is unimodal

    tol = sqrt(eps())
    a = 2 - (1 + sqrt(5))/2 ## 2 - golden ratio
    
    ## pick point in bigger of two subintervals return point and indicate if left side
    pick_point(x1,x2,x3) = x2 - x1 > x3 - x2 ? (x2 - a*(x2-x1), true) : (x2 + a*(x3-x2), false)

    ## update triple if point is new max or not. 
    function update_triple(x1, x2, x3)
        (x, left_side) = pick_point(x1, x2, x3)
        if f(x) > f(x2)
            left_side ? (x1, x, x2) : (x2, x, x3)
        else
            left_side ? (x, x2, x3) : (x1, x2, x)
        end
    end

    ## now loop until the gap between left and right is within tolerance.
    ## the distance shrinks by 1 - gr = .618 each trip through so this converges in about
    ## `(8 + log10(x3 - x1))/log10(1/.618) | ceil` trips
    while x3 - x1 > tol
        (x1, x2, x3) = update_triple(x1, x2, x3)
    end
    
    ## return argmax and max
    (x2, f(x2))
end
```
    
Let's use this to find the maximum value of $f(x) = x^2(1-x)^{10}$ over
$[0,1]$. We start with a guess of .5:

```j
f(x) = x^2 * (1-x)^10
golden_section(f, 0, .5, 1)
```

It appears the maximum occurs at $1/6$.

### finding the median -- with calculus

Here is an example where Newton's method will fail as the function is
not differentiable everywhere. You can find the median of the 5
numbers 1, 3, 6, 7, 8 by either sorting and picking the middle one --
or through calculus. Your choice now. If you want to use calculus, the
median will minimize this function:

```j
f(x) = abs(x - 1) + abs(x - 3) + abs(x - 6) +abs(x - 7) + abs(x - 8) 
```

(Alternatively, ou might better define this through a comprehension:

```j
vals = [1, 3, 6, 7, 8]; f(x) = sum( [abs(x-i) for i in vals] )
```

A graph will show why the median is argmin:

```j
plot(f, min(vals), max(vals))
```



Now, we just discussed a method to _maximize_ a function -- not
)minimize_ one. What do do? Flip the function upside down of
course. That is apply the golden section algorithm to $g(x) = -
f(x)$. The median measures center so must be between 1 and 8. For a
guess, we will start with 3:

```j
g(x) = -f(x)
golden_section(g, 1, 3, 8)
```

Not bad. Now try Newton's method starting at $x=3$ and see if this works.

<!--- Finish this off -->
`r I(nav$write_footer())`
`r I(page$write_footer())`

